model Task {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title       String
  description String?
  tags        String[]

  type     TaskTypeEnum?     @default(USER_STORY)
  priority TaskPriorityEnum?
  status   TaskStatusEnum?   @default(BACKLOG)

  assigneeId        String?
  assignee          ProjectEnrollment? @relation(fields: [assigneeId], references: [id])
  projectId         String?
  project           Project?           @relation(fields: [projectId], references: [id])
  projectTemplateId String?
  projectTemplate   ProjectTemplate?   @relation(fields: [projectTemplateId], references: [id])
  epicId            String?
  epic              Epic?              @relation(fields: [epicId], references: [id])
  sprintId          String?
  sprint            Sprint?            @relation(fields: [sprintId], references: [id])

  @@unique([title, projectTemplateId])
}

model Epic {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title       String
  description String?

  projectId         String?
  project           Project?         @relation(fields: [projectId], references: [id])
  projectTemplateId String?
  ProjectTemplate   ProjectTemplate? @relation(fields: [projectTemplateId], references: [id])

  tasks Task[]
}

model Sprint {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title       String
  description String?

  projectTemplateId String?
  projectTemplate   ProjectTemplate? @relation(fields: [projectTemplateId], references: [id])
  projectId         String?
  project           Project?         @relation(fields: [projectId], references: [id])

  tasks Task[]
}
