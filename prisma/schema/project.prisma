model Project {
  createdAt        DateTime               @default(now())
  updatedAt        DateTime               @updatedAt
  id               String                 @id @default(cuid())
  title            String                 @unique
  slug             String                 @unique
  description      String
  methodology      ProjectMethodologyEnum @default(SCRUM)
  minParticipants  Int
  maxParticipants  Int
  timeline         String?
  credits          Int?
  type             ProjectTypeEnum
  difficulty       ProjectDifficultyEnum
  resources        Resource[]
  milestones       Milestone[]
  discussions      Discussion[]
  technologies     Technology[]
  learningOutcomes LearningOutcome[]
  members          ProjectEnrollment[]
  tasks            Task[]
  images           ProjectImage[]

  authorId          String
  author            User             @relation(fields: [authorId], references: [id])
  categoryId        String
  category          Category         @relation(fields: [categoryId], references: [id])
  projectTemplateId String?
  projectTemplate   ProjectTemplate? @relation(fields: [projectTemplateId], references: [id])

  epics   Epic[]
  sprints Sprint[]
}

model ProjectEnrollment {
  createdAt DateTime                    @default(now())
  updatedAt DateTime                    @updatedAt
  id        String                      @id @default(cuid())
  projectId String
  project   Project                     @relation(fields: [projectId], references: [id])
  userId    String
  user      User                        @relation(fields: [userId], references: [id])
  role      ProjectRoleEnum             @default(MENTEE)
  status    ProjectEnrollmentStatusEnum @default(ACTIVE)
  tasks     Task[]
}
